type Cliente {
    id: ID
    nombre: String
    apellido: String
    empresa: String
    emails: [Email]
    edad: Int
    tipo: TipoCliente
}
type Email {
    email: String
}
type Pedido {
    id: ID
    pedido: [PedidoProducto]
    total: Int
    fecha: String
    cliente: ID
    estado: EstadoPedido
}
type PedidoProducto {
    id: ID
    cantidad: Int
}
type Producto {
    id: ID
    nombre: String!
    precio: Int!
    stock: Int!
}
""" Asigna la categoria del cliente """
enum TipoCliente {
    BASICO
    PREMIUM
}
enum EstadoPedido {
    PENDIENTE
    COMPLETADO
    CANCELADO
}
type Query {
    getClientes(limite: Int, offset: Int) : [Cliente]
    getCliente(id: ID) : Cliente
    totalClientes : String

    # Productos
    obtenerProductos(limite: Int, offset: Int, stock: Boolean) : [Producto]
    obtenerProducto(id: ID!) : Producto
    totalProductos : String

    #pedidos
    obtenerPedidos( cliente: String ) : [Pedido]
}
input PedidoInput {
    producto: String
    precio: Int
}
input EmailInput {
    email: String
}
""" Campos para los clientes nuevos """
input ClienteInput {
    id: ID
    nombre: String!
    apellido: String!
    empresa: String!
    emails: [EmailInput]
    edad: Int!
    tipo: TipoCliente!
    pedidos: [PedidoInput]
}
input ProductoInput {
    id: ID
    nombre: String!
    precio: Int!
    stock: Int!
}
input PedidoInput {
    id: ID
    pedido: [PedidoProductoInput]
    total: Int
    fecha: String
    cliente: ID
    estado: EstadoPedido
}

input PedidoProductoInput {
    id: ID
    cantidad: Int
}

""" Mutations para crear nuevos Clientes """
type Mutation {
    #nombre del resolver, input con datos y valor que retorna
    """ Te permite crear Nuevos Clientes """
    crearCliente(input: ClienteInput) : Cliente
    actualizarCliente(input: ClienteInput) : Cliente
    eliminarCliente(id: ID! ) : String
    #productos
    nuevoProducto(input: ProductoInput) : Producto
    actualizarProducto(input: ProductoInput) : Producto
    eliminarProducto(id: ID!) : String
    #pedidos
    nuevoPedido(input: PedidoInput) : Pedido
    actualizarEstado(input: PedidoInput) : String
}